// Following is the Binary Tree node structure
/**************
class BinaryTreeNode {
    public : 
    T data;
    BinaryTreeNode<T> *left;
    BinaryTreeNode<T> *right;

    BinaryTreeNode(T data) {
        this -> data = data;
        left = NULL;
        right = NULL;
    }
};
***************/

vector<int>* findPath(BinaryTreeNode<int> *root , int data){
    /* Don't write main().
     * Don't read input, it is passed as function argument.
     * Return output and don't print it.
     * Taking input and printing output is handled automatically.
     */

    if(root==NULL){return NULL;}
    if(root->data==data){
        vector<int>* temp=new vector<int>();
        temp->push_back(root->data);
        return temp;
        
    }
    vector<int>* lefttemp=findPath(root->left,data);
    if(lefttemp!=NULL){
    lefttemp->push_back(root->data);
    return lefttemp;
    }
    
    
    vector<int>* righttemp=findPath(root->right,data);
    if(righttemp!=NULL){
    righttemp->push_back(root->data);
    return righttemp;
    }
    else{
        return NULL;
    }
    
    
    
}
